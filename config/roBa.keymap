#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

// #includeのあとのあたりにスクロール量変更の定義を追記：マウススクロールの設定をロータリーエンコーダーへ設定。

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        CONTROLLA {
            bindings = <&kp LC(A)>;
            key-positions = <10 11>;
        };

        SHIFT_Z {
            bindings = <&kp LS(Z)>;
            key-positions = <22 23>;
        };

        SHIFT_Enter {
            bindings = <&kp LS(ENTER)>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        Cntrl2: Cntrl2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_CONTROL>;
            label = "CNTRL2";
        };
    };

    //    behaviors {
    //        lt_to_layer_0: lt_to_layer_0 {
    //            compatible = "zmk,behavior-hold-tap";
    //            label = "LAYER_TAP_TO_0";
    //            bindings = <&mo>, <&to_layer_0>;
    //
    //            #binding-cells = <2>;
    //            tapping-term-ms = <200>;
    //        };
    //    };
    // マウススクロールの設定をロータリーエンコーダーへ設定。
    // スクロール方向を逆にしたい場合は <&msc SCRL_DOWN> と <&msc SCRL_UP> を入れ替えてください

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W         &kp E         &kp R                      &kp T                                                    &kp Y            &kp U  &kp I      &kp O    &kp P
&lt 4 A     &kp S         &kp D         &kp F                      &kp G                   &kp ESCAPE       &kp SEMI        &kp H            &kp J  &kp K      &kp L    &kp ENTER
&lt 3 Z     &kp X         &kp C         &kp V                      &kp B                   &to 2            &kp MINUS       &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp ESCAPE  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANGUAGE_2  &mt LEFT_CONTROL SPACE  &lt 2 ENTER      &lt 2 INT_KANA  &lt 1 BACKSPACE                             &to 5
            >;

            // マウススクロールの設定をロータリーエンコーダーへ設定。
            //            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE          &trans  &kp AMPERSAND  &trans      &kp AT                                      &kp RBKT  &kp NON_US_HASH  &kp UP_ARROW  &kp F10    &kp LS(LG(S))
&trans              &kp F2  &trans         &kp F4      &kp F5      &trans            &bt BT_SEL 0  &trans    &kp LEFT         &kp DOWN      &kp RIGHT  &kp F10
&kp LS(LEFT_SHIFT)  &trans  &trans         &bt BT_PRV  &bt BT_NXT  &bt BT_SEL 2      &bt BT_SEL 1  &trans    &trans           &trans        &trans     &kp JP_UNDERSCORE
&trans              &trans  &trans         &trans      &trans      &trans            &trans        &trans                                              &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                 &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp EXCLAMATION  &trans  &kp PERCENT
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp LC(LA(KP_NUMBER_0))      &trans         &kp N6             &kp N7                &kp N8           &kp N9  &kp N0
&trans  &trans  &trans  &trans  &kp COLON  &to 0                        &kp LS(MINUS)  &kp DOUBLE_QUOTES  &kp HASH              &kp DOLLAR       &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans                       &trans         &trans                                                            &trans
            >;
        };

        SHIFT {
            bindings = <
&kp LS(Q)       &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)                                &kp LS(Y)        &kp LS(U)  &kp LS(I)      &kp LS(O)       &kp LS(P)
&kp LS(A)       &kp LS(S)  &kp LS(D)  &kp LS(F)  &kp LS(G)  &trans      &kp SINGLE_QUOTE  &kp LS(H)        &kp LS(J)  &kp LS(K)      &kp LS(L)       &kp APOSTROPHE
&kp LEFT_SHIFT  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)  &trans      &kp UNDER         &kp LS(N)        &kp LS(M)  &kp LS(COMMA)  &kp LS(PERIOD)  &kp LS(SLASH)
&trans          &trans     &trans     &trans     &trans     &trans      &kp LBKT          &lt 1 BACKSPACE                                            &kp JP_UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp LC(Q)             &kp LC(W)         &kp LC(E)  &kp LC(R)  &kp LC(T)                      &kp LC(Y)  &kp LC(U)  &kp LC(I)  &trans     &trans
&kp LC(LEFT_CONTROL)  &kp LC(S)         &kp LC(D)  &kp LC(F)  &kp LC(Z)  &trans      &trans  &trans     &trans     &trans     &kp LC(L)  &trans
&kp LEFT_CONTROL      &kp LC(X)         &kp LC(C)  &kp LC(V)  &kp LC(B)  &to 0       &trans  &trans     &mkp MB1   &mkp MB2   &trans     &trans
&trans                &kp LC(LEFT_WIN)  &trans     &trans     &Cntrl2    &trans      &trans  &trans                                      &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &to 0       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &to 0
            >;
        };
    };
};
